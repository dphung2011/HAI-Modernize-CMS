// <auto-generated />
using System;
using CMS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250628204241_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CMS.Domain.Entities.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Date")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SemOrYear")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("AttendanceId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SemOrYear")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TotalSemOrYear")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Faculty", b =>
                {
                    b.Property<int>("FacultyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FacultyId"));

                    b.Property<string>("ActiveStatus")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Experience")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FacultyFirstName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FacultyLastName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("JoinDate")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Password")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double?>("Pincode")
                        .HasColumnType("double");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("longblob");

                    b.Property<string>("Qualification")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("State")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("FacultyId");

                    b.HasIndex("SubjectName");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MarkId"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SemOrYear")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject1MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject1MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject1PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject1TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject2MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject2MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject2PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject2TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject3")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject3MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject3MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject3PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject3TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject4")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject4MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject4MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject4PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject4TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject5")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject5MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject5MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject5PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject5TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject6")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject6MaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject6MaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject6PracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Subject6TheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TotalMaxPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TotalMaxTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TotalPracticalMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TotalTheoryMarks")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("MarkId");

                    b.HasIndex("StudentId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("ActiveStatus")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdmissionDate")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CourseName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DateOfBirth")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MotherName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double?>("Pincode")
                        .HasColumnType("double");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("longblob");

                    b.Property<string>("State")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseName");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("CourseName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("PracticalMarks")
                        .HasColumnType("int");

                    b.Property<string>("SemOrYear")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SubjectType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TheoryMarks")
                        .HasColumnType("int");

                    b.HasKey("SubjectId");

                    b.HasIndex("CourseName");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("CMS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Attendance", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Student", "Student")
                        .WithMany("Attendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Faculty", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Subject", "Subject")
                        .WithMany("Faculties")
                        .HasForeignKey("SubjectName")
                        .HasPrincipalKey("SubjectName");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Mark", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Student", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseName")
                        .HasPrincipalKey("CourseName");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Subject", b =>
                {
                    b.HasOne("CMS.Domain.Entities.Course", "Course")
                        .WithMany("Subjects")
                        .HasForeignKey("CourseName")
                        .HasPrincipalKey("CourseName");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Course", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Student", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("Marks");
                });

            modelBuilder.Entity("CMS.Domain.Entities.Subject", b =>
                {
                    b.Navigation("Faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
